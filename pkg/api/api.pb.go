// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/api/api.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Signal struct {
	SignalType           string   `protobuf:"bytes,1,opt,name=signalType,proto3" json:"signalType,omitempty"`
	From                 string   `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Payload              string   `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signal) Reset()         { *m = Signal{} }
func (m *Signal) String() string { return proto.CompactTextString(m) }
func (*Signal) ProtoMessage()    {}
func (*Signal) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_68e9a212e99b835c, []int{0}
}
func (m *Signal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signal.Unmarshal(m, b)
}
func (m *Signal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signal.Marshal(b, m, deterministic)
}
func (dst *Signal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signal.Merge(dst, src)
}
func (m *Signal) XXX_Size() int {
	return xxx_messageInfo_Signal.Size(m)
}
func (m *Signal) XXX_DiscardUnknown() {
	xxx_messageInfo_Signal.DiscardUnknown(m)
}

var xxx_messageInfo_Signal proto.InternalMessageInfo

func (m *Signal) GetSignalType() string {
	if m != nil {
		return m.SignalType
	}
	return ""
}

func (m *Signal) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Signal) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type InstantMessage struct {
	MessageType          string   `protobuf:"bytes,1,opt,name=messageType,proto3" json:"messageType,omitempty"`
	From                 string   `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Channel              string   `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	To                   string   `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Body                 string   `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstantMessage) Reset()         { *m = InstantMessage{} }
func (m *InstantMessage) String() string { return proto.CompactTextString(m) }
func (*InstantMessage) ProtoMessage()    {}
func (*InstantMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_68e9a212e99b835c, []int{1}
}
func (m *InstantMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstantMessage.Unmarshal(m, b)
}
func (m *InstantMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstantMessage.Marshal(b, m, deterministic)
}
func (dst *InstantMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstantMessage.Merge(dst, src)
}
func (m *InstantMessage) XXX_Size() int {
	return xxx_messageInfo_InstantMessage.Size(m)
}
func (m *InstantMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_InstantMessage.DiscardUnknown(m)
}

var xxx_messageInfo_InstantMessage proto.InternalMessageInfo

func (m *InstantMessage) GetMessageType() string {
	if m != nil {
		return m.MessageType
	}
	return ""
}

func (m *InstantMessage) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *InstantMessage) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *InstantMessage) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *InstantMessage) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type Responce struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Responce) Reset()         { *m = Responce{} }
func (m *Responce) String() string { return proto.CompactTextString(m) }
func (*Responce) ProtoMessage()    {}
func (*Responce) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_68e9a212e99b835c, []int{2}
}
func (m *Responce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Responce.Unmarshal(m, b)
}
func (m *Responce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Responce.Marshal(b, m, deterministic)
}
func (dst *Responce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Responce.Merge(dst, src)
}
func (m *Responce) XXX_Size() int {
	return xxx_messageInfo_Responce.Size(m)
}
func (m *Responce) XXX_DiscardUnknown() {
	xxx_messageInfo_Responce.DiscardUnknown(m)
}

var xxx_messageInfo_Responce proto.InternalMessageInfo

func (m *Responce) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Responce) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*Signal)(nil), "Signal")
	proto.RegisterType((*InstantMessage)(nil), "InstantMessage")
	proto.RegisterType((*Responce)(nil), "Responce")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HermesClient is the client API for Hermes service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HermesClient interface {
	Keepalive(ctx context.Context, in *Signal, opts ...grpc.CallOption) (*Responce, error)
	SendMessage(ctx context.Context, in *InstantMessage, opts ...grpc.CallOption) (*Responce, error)
	Delivered(ctx context.Context, in *Signal, opts ...grpc.CallOption) (*Responce, error)
}

type hermesClient struct {
	cc *grpc.ClientConn
}

func NewHermesClient(cc *grpc.ClientConn) HermesClient {
	return &hermesClient{cc}
}

func (c *hermesClient) Keepalive(ctx context.Context, in *Signal, opts ...grpc.CallOption) (*Responce, error) {
	out := new(Responce)
	err := c.cc.Invoke(ctx, "/Hermes/keepalive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hermesClient) SendMessage(ctx context.Context, in *InstantMessage, opts ...grpc.CallOption) (*Responce, error) {
	out := new(Responce)
	err := c.cc.Invoke(ctx, "/Hermes/sendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hermesClient) Delivered(ctx context.Context, in *Signal, opts ...grpc.CallOption) (*Responce, error) {
	out := new(Responce)
	err := c.cc.Invoke(ctx, "/Hermes/delivered", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HermesServer is the server API for Hermes service.
type HermesServer interface {
	Keepalive(context.Context, *Signal) (*Responce, error)
	SendMessage(context.Context, *InstantMessage) (*Responce, error)
	Delivered(context.Context, *Signal) (*Responce, error)
}

func RegisterHermesServer(s *grpc.Server, srv HermesServer) {
	s.RegisterService(&_Hermes_serviceDesc, srv)
}

func _Hermes_Keepalive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Signal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HermesServer).Keepalive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Hermes/Keepalive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HermesServer).Keepalive(ctx, req.(*Signal))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hermes_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstantMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HermesServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Hermes/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HermesServer).SendMessage(ctx, req.(*InstantMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hermes_Delivered_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Signal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HermesServer).Delivered(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Hermes/Delivered",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HermesServer).Delivered(ctx, req.(*Signal))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hermes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Hermes",
	HandlerType: (*HermesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "keepalive",
			Handler:    _Hermes_Keepalive_Handler,
		},
		{
			MethodName: "sendMessage",
			Handler:    _Hermes_SendMessage_Handler,
		},
		{
			MethodName: "delivered",
			Handler:    _Hermes_Delivered_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/api/api.proto",
}

func init() { proto.RegisterFile("pkg/api/api.proto", fileDescriptor_api_68e9a212e99b835c) }

var fileDescriptor_api_68e9a212e99b835c = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0x69, 0xdd, 0xed, 0xda, 0x59, 0x58, 0x71, 0xf0, 0x10, 0x3c, 0xb8, 0x4b, 0x4f, 0x7a,
	0xa9, 0xa0, 0xfe, 0x08, 0x3d, 0x78, 0x59, 0xc5, 0x7b, 0xb6, 0x19, 0x6b, 0xd9, 0x36, 0x13, 0x92,
	0x28, 0xf4, 0xee, 0x0f, 0x97, 0xa6, 0x5b, 0x89, 0xe0, 0x1e, 0x0a, 0xef, 0xbd, 0x66, 0xde, 0xc7,
	0x24, 0x70, 0x6e, 0xf6, 0xf5, 0xad, 0x34, 0xcd, 0xf0, 0x95, 0xc6, 0xb2, 0xe7, 0xe2, 0x0d, 0xb2,
	0x97, 0xa6, 0xd6, 0xb2, 0xc5, 0x2b, 0x00, 0x17, 0xd4, 0x6b, 0x6f, 0x48, 0x24, 0x9b, 0xe4, 0x3a,
	0xdf, 0x46, 0x09, 0x22, 0xcc, 0xde, 0x2d, 0x77, 0x22, 0x0d, 0x7f, 0x82, 0x46, 0x01, 0x0b, 0x23,
	0xfb, 0x96, 0xa5, 0x12, 0x27, 0x21, 0x9e, 0x6c, 0xf1, 0x9d, 0xc0, 0xea, 0x49, 0x3b, 0x2f, 0xb5,
	0x7f, 0x26, 0xe7, 0x64, 0x4d, 0xb8, 0x81, 0x65, 0x37, 0xca, 0x88, 0x10, 0x47, 0xc7, 0x10, 0xd5,
	0x87, 0xd4, 0x9a, 0xda, 0x09, 0x71, 0xb0, 0xb8, 0x82, 0xd4, 0xb3, 0x98, 0x85, 0x30, 0xf5, 0x3c,
	0x4c, 0xef, 0x58, 0xf5, 0x62, 0x3e, 0x4e, 0x0f, 0xba, 0x78, 0x80, 0xd3, 0x2d, 0x39, 0xc3, 0xba,
	0x0a, 0xed, 0x15, 0xab, 0x09, 0x1c, 0x34, 0x5e, 0xc0, 0x9c, 0xac, 0x65, 0x7b, 0x40, 0x8e, 0xe6,
	0xee, 0x13, 0xb2, 0x47, 0xb2, 0x1d, 0x39, 0x5c, 0x43, 0xbe, 0x27, 0x32, 0xb2, 0x6d, 0xbe, 0x08,
	0x17, 0xe5, 0x78, 0x55, 0x97, 0x79, 0xf9, 0x5b, 0x7a, 0x03, 0x4b, 0x47, 0x5a, 0x4d, 0x3b, 0x9e,
	0x95, 0x7f, 0x97, 0x8e, 0x8f, 0xae, 0x21, 0x57, 0x34, 0x14, 0x59, 0x52, 0xff, 0x75, 0xed, 0xb2,
	0xf0, 0x24, 0xf7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb0, 0x8b, 0x60, 0x59, 0xa7, 0x01, 0x00,
	0x00,
}
