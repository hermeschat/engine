// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/api/api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChannelID struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelID) Reset()         { *m = ChannelID{} }
func (m *ChannelID) String() string { return proto.CompactTextString(m) }
func (*ChannelID) ProtoMessage()    {}
func (*ChannelID) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{0}
}

func (m *ChannelID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelID.Unmarshal(m, b)
}
func (m *ChannelID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelID.Marshal(b, m, deterministic)
}
func (m *ChannelID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelID.Merge(m, src)
}
func (m *ChannelID) XXX_Size() int {
	return xxx_messageInfo_ChannelID.Size(m)
}
func (m *ChannelID) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelID.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelID proto.InternalMessageInfo

func (m *ChannelID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadSignal struct {
	MessageID            string   `protobuf:"bytes,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	ChannelID            string   `protobuf:"bytes,2,opt,name=channelID,proto3" json:"channelID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadSignal) Reset()         { *m = ReadSignal{} }
func (m *ReadSignal) String() string { return proto.CompactTextString(m) }
func (*ReadSignal) ProtoMessage()    {}
func (*ReadSignal) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{1}
}

func (m *ReadSignal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadSignal.Unmarshal(m, b)
}
func (m *ReadSignal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadSignal.Marshal(b, m, deterministic)
}
func (m *ReadSignal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadSignal.Merge(m, src)
}
func (m *ReadSignal) XXX_Size() int {
	return xxx_messageInfo_ReadSignal.Size(m)
}
func (m *ReadSignal) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadSignal.DiscardUnknown(m)
}

var xxx_messageInfo_ReadSignal proto.InternalMessageInfo

func (m *ReadSignal) GetMessageID() string {
	if m != nil {
		return m.MessageID
	}
	return ""
}

func (m *ReadSignal) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

type Messages struct {
	Msg                  []*Message `protobuf:"bytes,1,rep,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Messages) Reset()         { *m = Messages{} }
func (m *Messages) String() string { return proto.CompactTextString(m) }
func (*Messages) ProtoMessage()    {}
func (*Messages) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{2}
}

func (m *Messages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Messages.Unmarshal(m, b)
}
func (m *Messages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Messages.Marshal(b, m, deterministic)
}
func (m *Messages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Messages.Merge(m, src)
}
func (m *Messages) XXX_Size() int {
	return xxx_messageInfo_Messages.Size(m)
}
func (m *Messages) XXX_DiscardUnknown() {
	xxx_messageInfo_Messages.DiscardUnknown(m)
}

var xxx_messageInfo_Messages proto.InternalMessageInfo

func (m *Messages) GetMsg() []*Message {
	if m != nil {
		return m.Msg
	}
	return nil
}

type Channels struct {
	Msg                  []*Channel `protobuf:"bytes,1,rep,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Channels) Reset()         { *m = Channels{} }
func (m *Channels) String() string { return proto.CompactTextString(m) }
func (*Channels) ProtoMessage()    {}
func (*Channels) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{3}
}

func (m *Channels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Channels.Unmarshal(m, b)
}
func (m *Channels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Channels.Marshal(b, m, deterministic)
}
func (m *Channels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Channels.Merge(m, src)
}
func (m *Channels) XXX_Size() int {
	return xxx_messageInfo_Channels.Size(m)
}
func (m *Channels) XXX_DiscardUnknown() {
	xxx_messageInfo_Channels.DiscardUnknown(m)
}

var xxx_messageInfo_Channels proto.InternalMessageInfo

func (m *Channels) GetMsg() []*Channel {
	if m != nil {
		return m.Msg
	}
	return nil
}

type Channel struct {
	Members              []string          `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string            `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Roles                map[string]string `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ChannelId            string            `protobuf:"bytes,5,opt,name=channelId,proto3" json:"channelId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Channel) Reset()         { *m = Channel{} }
func (m *Channel) String() string { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()    {}
func (*Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{4}
}

func (m *Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Channel.Unmarshal(m, b)
}
func (m *Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Channel.Marshal(b, m, deterministic)
}
func (m *Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Channel.Merge(m, src)
}
func (m *Channel) XXX_Size() int {
	return xxx_messageInfo_Channel.Size(m)
}
func (m *Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_Channel proto.InternalMessageInfo

func (m *Channel) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Channel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Channel) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Channel) GetRoles() map[string]string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *Channel) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

type Event struct {
	// Types that are valid to be assigned to Event:
	//	*Event_Dlv
	//	*Event_Read
	//	*Event_Keep
	//	*Event_DestorySess
	//	*Event_NewMessage
	//	*Event_Join
	Event                isEvent_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{5}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

type isEvent_Event interface {
	isEvent_Event()
}

type Event_Dlv struct {
	Dlv *DeliveredSignal `protobuf:"bytes,1,opt,name=dlv,proto3,oneof"`
}

type Event_Read struct {
	Read *ReadSignal `protobuf:"bytes,2,opt,name=read,proto3,oneof"`
}

type Event_Keep struct {
	Keep *KeepAliveSignal `protobuf:"bytes,3,opt,name=keep,proto3,oneof"`
}

type Event_DestorySess struct {
	DestorySess *DestroySessionRequest `protobuf:"bytes,4,opt,name=destorySess,proto3,oneof"`
}

type Event_NewMessage struct {
	NewMessage *Message `protobuf:"bytes,5,opt,name=newMessage,proto3,oneof"`
}

type Event_Join struct {
	Join *JoinSignal `protobuf:"bytes,6,opt,name=join,proto3,oneof"`
}

func (*Event_Dlv) isEvent_Event() {}

func (*Event_Read) isEvent_Event() {}

func (*Event_Keep) isEvent_Event() {}

func (*Event_DestorySess) isEvent_Event() {}

func (*Event_NewMessage) isEvent_Event() {}

func (*Event_Join) isEvent_Event() {}

func (m *Event) GetEvent() isEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *Event) GetDlv() *DeliveredSignal {
	if x, ok := m.GetEvent().(*Event_Dlv); ok {
		return x.Dlv
	}
	return nil
}

func (m *Event) GetRead() *ReadSignal {
	if x, ok := m.GetEvent().(*Event_Read); ok {
		return x.Read
	}
	return nil
}

func (m *Event) GetKeep() *KeepAliveSignal {
	if x, ok := m.GetEvent().(*Event_Keep); ok {
		return x.Keep
	}
	return nil
}

func (m *Event) GetDestorySess() *DestroySessionRequest {
	if x, ok := m.GetEvent().(*Event_DestorySess); ok {
		return x.DestorySess
	}
	return nil
}

func (m *Event) GetNewMessage() *Message {
	if x, ok := m.GetEvent().(*Event_NewMessage); ok {
		return x.NewMessage
	}
	return nil
}

func (m *Event) GetJoin() *JoinSignal {
	if x, ok := m.GetEvent().(*Event_Join); ok {
		return x.Join
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Event) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Event_Dlv)(nil),
		(*Event_Read)(nil),
		(*Event_Keep)(nil),
		(*Event_DestorySess)(nil),
		(*Event_NewMessage)(nil),
		(*Event_Join)(nil),
	}
}

type Empty struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{6}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func (m *Empty) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type KeepAliveSignal struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeepAliveSignal) Reset()         { *m = KeepAliveSignal{} }
func (m *KeepAliveSignal) String() string { return proto.CompactTextString(m) }
func (*KeepAliveSignal) ProtoMessage()    {}
func (*KeepAliveSignal) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{7}
}

func (m *KeepAliveSignal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeepAliveSignal.Unmarshal(m, b)
}
func (m *KeepAliveSignal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeepAliveSignal.Marshal(b, m, deterministic)
}
func (m *KeepAliveSignal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeepAliveSignal.Merge(m, src)
}
func (m *KeepAliveSignal) XXX_Size() int {
	return xxx_messageInfo_KeepAliveSignal.Size(m)
}
func (m *KeepAliveSignal) XXX_DiscardUnknown() {
	xxx_messageInfo_KeepAliveSignal.DiscardUnknown(m)
}

var xxx_messageInfo_KeepAliveSignal proto.InternalMessageInfo

type DeliveredSignal struct {
	MessageID            string   `protobuf:"bytes,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	ChannelID            string   `protobuf:"bytes,2,opt,name=channelID,proto3" json:"channelID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeliveredSignal) Reset()         { *m = DeliveredSignal{} }
func (m *DeliveredSignal) String() string { return proto.CompactTextString(m) }
func (*DeliveredSignal) ProtoMessage()    {}
func (*DeliveredSignal) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{8}
}

func (m *DeliveredSignal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeliveredSignal.Unmarshal(m, b)
}
func (m *DeliveredSignal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeliveredSignal.Marshal(b, m, deterministic)
}
func (m *DeliveredSignal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliveredSignal.Merge(m, src)
}
func (m *DeliveredSignal) XXX_Size() int {
	return xxx_messageInfo_DeliveredSignal.Size(m)
}
func (m *DeliveredSignal) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliveredSignal.DiscardUnknown(m)
}

var xxx_messageInfo_DeliveredSignal proto.InternalMessageInfo

func (m *DeliveredSignal) GetMessageID() string {
	if m != nil {
		return m.MessageID
	}
	return ""
}

func (m *DeliveredSignal) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

type JoinSignal struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinSignal) Reset()         { *m = JoinSignal{} }
func (m *JoinSignal) String() string { return proto.CompactTextString(m) }
func (*JoinSignal) ProtoMessage()    {}
func (*JoinSignal) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{9}
}

func (m *JoinSignal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinSignal.Unmarshal(m, b)
}
func (m *JoinSignal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinSignal.Marshal(b, m, deterministic)
}
func (m *JoinSignal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinSignal.Merge(m, src)
}
func (m *JoinSignal) XXX_Size() int {
	return xxx_messageInfo_JoinSignal.Size(m)
}
func (m *JoinSignal) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinSignal.DiscardUnknown(m)
}

var xxx_messageInfo_JoinSignal proto.InternalMessageInfo

func (m *JoinSignal) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type DestroySessionRequest struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=SessionId,proto3" json:"SessionId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DestroySessionRequest) Reset()         { *m = DestroySessionRequest{} }
func (m *DestroySessionRequest) String() string { return proto.CompactTextString(m) }
func (*DestroySessionRequest) ProtoMessage()    {}
func (*DestroySessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{10}
}

func (m *DestroySessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DestroySessionRequest.Unmarshal(m, b)
}
func (m *DestroySessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DestroySessionRequest.Marshal(b, m, deterministic)
}
func (m *DestroySessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DestroySessionRequest.Merge(m, src)
}
func (m *DestroySessionRequest) XXX_Size() int {
	return xxx_messageInfo_DestroySessionRequest.Size(m)
}
func (m *DestroySessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DestroySessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DestroySessionRequest proto.InternalMessageInfo

func (m *DestroySessionRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type Message struct {
	MessageType          string   `protobuf:"bytes,1,opt,name=messageType,proto3" json:"messageType,omitempty"`
	From                 string   `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Channel              string   `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	To                   string   `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Body                 string   `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	SessionID            string   `protobuf:"bytes,6,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	MessageID            string   `protobuf:"bytes,7,opt,name=messageID,proto3" json:"messageID,omitempty"`
	ChannelID            string   `protobuf:"bytes,8,opt,name=channelID,proto3" json:"channelID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{11}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMessageType() string {
	if m != nil {
		return m.MessageType
	}
	return ""
}

func (m *Message) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Message) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *Message) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Message) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Message) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *Message) GetMessageID() string {
	if m != nil {
		return m.MessageID
	}
	return ""
}

func (m *Message) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

type GetOrCreateSessionResponse struct {
	SessionID            string   `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	LastActivity         string   `protobuf:"bytes,2,opt,name=LastActivity,proto3" json:"LastActivity,omitempty"`
	UserID               string   `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserIP               string   `protobuf:"bytes,4,opt,name=UserIP,proto3" json:"UserIP,omitempty"`
	UserAgent            string   `protobuf:"bytes,5,opt,name=UserAgent,proto3" json:"UserAgent,omitempty"`
	ClientVersion        string   `protobuf:"bytes,6,opt,name=ClientVersion,proto3" json:"ClientVersion,omitempty"`
	Node                 string   `protobuf:"bytes,7,opt,name=Node,proto3" json:"Node,omitempty"`
	Code                 string   `protobuf:"bytes,8,opt,name=Code,proto3" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrCreateSessionResponse) Reset()         { *m = GetOrCreateSessionResponse{} }
func (m *GetOrCreateSessionResponse) String() string { return proto.CompactTextString(m) }
func (*GetOrCreateSessionResponse) ProtoMessage()    {}
func (*GetOrCreateSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{12}
}

func (m *GetOrCreateSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrCreateSessionResponse.Unmarshal(m, b)
}
func (m *GetOrCreateSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrCreateSessionResponse.Marshal(b, m, deterministic)
}
func (m *GetOrCreateSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrCreateSessionResponse.Merge(m, src)
}
func (m *GetOrCreateSessionResponse) XXX_Size() int {
	return xxx_messageInfo_GetOrCreateSessionResponse.Size(m)
}
func (m *GetOrCreateSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrCreateSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrCreateSessionResponse proto.InternalMessageInfo

func (m *GetOrCreateSessionResponse) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *GetOrCreateSessionResponse) GetLastActivity() string {
	if m != nil {
		return m.LastActivity
	}
	return ""
}

func (m *GetOrCreateSessionResponse) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetOrCreateSessionResponse) GetUserIP() string {
	if m != nil {
		return m.UserIP
	}
	return ""
}

func (m *GetOrCreateSessionResponse) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *GetOrCreateSessionResponse) GetClientVersion() string {
	if m != nil {
		return m.ClientVersion
	}
	return ""
}

func (m *GetOrCreateSessionResponse) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *GetOrCreateSessionResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type CreateSessionRequest struct {
	ClientType           string   `protobuf:"bytes,1,opt,name=ClientType,proto3" json:"ClientType,omitempty"`
	UserIP               string   `protobuf:"bytes,3,opt,name=UserIP,proto3" json:"UserIP,omitempty"`
	UserAgent            string   `protobuf:"bytes,4,opt,name=UserAgent,proto3" json:"UserAgent,omitempty"`
	ClientVersion        string   `protobuf:"bytes,5,opt,name=ClientVersion,proto3" json:"ClientVersion,omitempty"`
	Node                 string   `protobuf:"bytes,6,opt,name=Node,proto3" json:"Node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSessionRequest) Reset()         { *m = CreateSessionRequest{} }
func (m *CreateSessionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSessionRequest) ProtoMessage()    {}
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{13}
}

func (m *CreateSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSessionRequest.Unmarshal(m, b)
}
func (m *CreateSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSessionRequest.Marshal(b, m, deterministic)
}
func (m *CreateSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSessionRequest.Merge(m, src)
}
func (m *CreateSessionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSessionRequest.Size(m)
}
func (m *CreateSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSessionRequest proto.InternalMessageInfo

func (m *CreateSessionRequest) GetClientType() string {
	if m != nil {
		return m.ClientType
	}
	return ""
}

func (m *CreateSessionRequest) GetUserIP() string {
	if m != nil {
		return m.UserIP
	}
	return ""
}

func (m *CreateSessionRequest) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *CreateSessionRequest) GetClientVersion() string {
	if m != nil {
		return m.ClientVersion
	}
	return ""
}

func (m *CreateSessionRequest) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

type CreateSessionResponse struct {
	SessionID            string   `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSessionResponse) Reset()         { *m = CreateSessionResponse{} }
func (m *CreateSessionResponse) String() string { return proto.CompactTextString(m) }
func (*CreateSessionResponse) ProtoMessage()    {}
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{14}
}

func (m *CreateSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSessionResponse.Unmarshal(m, b)
}
func (m *CreateSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSessionResponse.Marshal(b, m, deterministic)
}
func (m *CreateSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSessionResponse.Merge(m, src)
}
func (m *CreateSessionResponse) XXX_Size() int {
	return xxx_messageInfo_CreateSessionResponse.Size(m)
}
func (m *CreateSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSessionResponse proto.InternalMessageInfo

func (m *CreateSessionResponse) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

type Response struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{15}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Response) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type UserDiscoveryEvent struct {
	UserID               string   `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ChannelID            string   `protobuf:"bytes,2,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserDiscoveryEvent) Reset()         { *m = UserDiscoveryEvent{} }
func (m *UserDiscoveryEvent) String() string { return proto.CompactTextString(m) }
func (*UserDiscoveryEvent) ProtoMessage()    {}
func (*UserDiscoveryEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e50ccc58c7b575d, []int{16}
}

func (m *UserDiscoveryEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserDiscoveryEvent.Unmarshal(m, b)
}
func (m *UserDiscoveryEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserDiscoveryEvent.Marshal(b, m, deterministic)
}
func (m *UserDiscoveryEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserDiscoveryEvent.Merge(m, src)
}
func (m *UserDiscoveryEvent) XXX_Size() int {
	return xxx_messageInfo_UserDiscoveryEvent.Size(m)
}
func (m *UserDiscoveryEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UserDiscoveryEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UserDiscoveryEvent proto.InternalMessageInfo

func (m *UserDiscoveryEvent) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *UserDiscoveryEvent) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

func init() {
	proto.RegisterType((*ChannelID)(nil), "channelID")
	proto.RegisterType((*ReadSignal)(nil), "ReadSignal")
	proto.RegisterType((*Messages)(nil), "Messages")
	proto.RegisterType((*Channels)(nil), "Channels")
	proto.RegisterType((*Channel)(nil), "Channel")
	proto.RegisterMapType((map[string]string)(nil), "Channel.RolesEntry")
	proto.RegisterType((*Event)(nil), "Event")
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*KeepAliveSignal)(nil), "KeepAliveSignal")
	proto.RegisterType((*DeliveredSignal)(nil), "DeliveredSignal")
	proto.RegisterType((*JoinSignal)(nil), "JoinSignal")
	proto.RegisterType((*DestroySessionRequest)(nil), "DestroySessionRequest")
	proto.RegisterType((*Message)(nil), "Message")
	proto.RegisterType((*GetOrCreateSessionResponse)(nil), "GetOrCreateSessionResponse")
	proto.RegisterType((*CreateSessionRequest)(nil), "CreateSessionRequest")
	proto.RegisterType((*CreateSessionResponse)(nil), "CreateSessionResponse")
	proto.RegisterType((*Response)(nil), "Response")
	proto.RegisterType((*UserDiscoveryEvent)(nil), "UserDiscoveryEvent")
}

func init() { proto.RegisterFile("pkg/api/api.proto", fileDescriptor_7e50ccc58c7b575d) }

var fileDescriptor_7e50ccc58c7b575d = []byte{
	// 830 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xcd, 0x92, 0xdb, 0x44,
	0x10, 0xb6, 0xfc, 0xaf, 0x76, 0x42, 0x92, 0x21, 0x71, 0xa9, 0x4c, 0x8a, 0x6c, 0x54, 0x21, 0xb5,
	0xe4, 0x20, 0x28, 0x03, 0x55, 0xa9, 0x1c, 0xa8, 0xda, 0x58, 0xae, 0xd8, 0x21, 0x01, 0x4a, 0x0b,
	0xdc, 0xb5, 0x56, 0xaf, 0x23, 0xd6, 0xd2, 0x88, 0x99, 0xb1, 0x29, 0xbd, 0x03, 0xcf, 0xc1, 0xe3,
	0x70, 0xe5, 0x31, 0xb8, 0x73, 0xa2, 0x7a, 0x34, 0xfa, 0xb1, 0xd8, 0x2c, 0x07, 0x0e, 0x2e, 0xf7,
	0x7c, 0xfd, 0x4d, 0xab, 0xfb, 0xeb, 0x9e, 0x19, 0xb8, 0x97, 0x5d, 0x6d, 0x3f, 0x0b, 0xb3, 0x98,
	0x7e, 0x5e, 0x26, 0xb8, 0xe2, 0xee, 0x47, 0x60, 0x6f, 0xde, 0x85, 0x69, 0x8a, 0xbb, 0xb5, 0xcf,
	0x3e, 0x80, 0x6e, 0x1c, 0x39, 0xd6, 0x89, 0x75, 0x6a, 0x07, 0xdd, 0x38, 0x72, 0x57, 0x00, 0x01,
	0x86, 0xd1, 0x79, 0xbc, 0x4d, 0xc3, 0x1d, 0x7b, 0x08, 0x76, 0x82, 0x52, 0x86, 0x5b, 0x5c, 0xfb,
	0x86, 0x54, 0x03, 0xe4, 0xad, 0x02, 0x39, 0xdd, 0xc2, 0x5b, 0x01, 0xee, 0x53, 0x18, 0xbf, 0x2d,
	0xa8, 0x92, 0xcd, 0xa0, 0x97, 0xc8, 0xad, 0x63, 0x9d, 0xf4, 0x4e, 0x27, 0xf3, 0xb1, 0x67, 0xf0,
	0x80, 0x40, 0xe2, 0x2d, 0x8a, 0x4d, 0xff, 0xe2, 0x19, 0xbc, 0xe0, 0xfd, 0x61, 0xc1, 0xc8, 0x00,
	0xcc, 0x81, 0x51, 0x82, 0xc9, 0x05, 0x0a, 0xa9, 0xb9, 0x76, 0x50, 0x2e, 0x19, 0x83, 0x7e, 0x1a,
	0x26, 0x68, 0xd2, 0xd1, 0x36, 0x61, 0x2a, 0xcf, 0xd0, 0xe9, 0x15, 0x18, 0xd9, 0xec, 0x53, 0x18,
	0x08, 0xbe, 0x43, 0xe9, 0xf4, 0xf5, 0xb7, 0x3e, 0x2c, 0xbf, 0xe5, 0x05, 0x84, 0x2e, 0x53, 0x25,
	0xf2, 0xa0, 0x60, 0x34, 0xcb, 0x8c, 0x9c, 0xc1, 0x71, 0x99, 0xd1, 0xec, 0x39, 0x40, 0xbd, 0x85,
	0xdd, 0x85, 0xde, 0x15, 0xe6, 0x46, 0x2a, 0x32, 0xd9, 0x7d, 0x18, 0x1c, 0xc2, 0xdd, 0xbe, 0xcc,
	0xa8, 0x58, 0xbc, 0xe8, 0x3e, 0xb7, 0xdc, 0xdf, 0xba, 0x30, 0x58, 0x1e, 0x30, 0x55, 0xec, 0x09,
	0xf4, 0xa2, 0xdd, 0x41, 0xef, 0x9a, 0xcc, 0xef, 0x7a, 0x3e, 0xee, 0xe2, 0x03, 0x0a, 0x34, 0x5d,
	0x58, 0x75, 0x02, 0x72, 0xb3, 0xc7, 0xd0, 0x17, 0x18, 0x46, 0x3a, 0xd0, 0x64, 0x3e, 0xf1, 0xea,
	0x3e, 0xad, 0x3a, 0x81, 0x76, 0xb1, 0xa7, 0xd0, 0xbf, 0x42, 0xcc, 0x74, 0xa5, 0x14, 0xe9, 0x1b,
	0xc4, 0xec, 0x8c, 0x82, 0xd5, 0x3c, 0xf2, 0xb3, 0x17, 0x30, 0x89, 0x50, 0x2a, 0x2e, 0xf2, 0x73,
	0x94, 0xa4, 0x01, 0xd1, 0xa7, 0x9e, 0x8f, 0x52, 0x09, 0xae, 0xb1, 0x98, 0xa7, 0x01, 0xfe, 0xb2,
	0x47, 0xa9, 0x56, 0x9d, 0xa0, 0x49, 0x66, 0xcf, 0x00, 0x52, 0xfc, 0xd5, 0xb4, 0x50, 0xeb, 0xd1,
	0x68, 0xe9, 0xaa, 0x13, 0x34, 0xbc, 0x94, 0xf2, 0xcf, 0x3c, 0x4e, 0x9d, 0xa1, 0x49, 0xf9, 0x35,
	0x8f, 0xd3, 0x3a, 0x15, 0x72, 0xbd, 0x1c, 0xc1, 0x00, 0x49, 0x04, 0xf7, 0x11, 0x0c, 0x96, 0x49,
	0xa6, 0x72, 0x36, 0x85, 0xa1, 0x54, 0xa1, 0xda, 0x4b, 0x23, 0xa3, 0x59, 0xb9, 0xf7, 0xe0, 0x4e,
	0xab, 0x1e, 0xf7, 0x2d, 0xdc, 0x69, 0x89, 0xf5, 0xbf, 0x46, 0xf6, 0x19, 0x40, 0x9d, 0x21, 0x71,
	0x65, 0xa1, 0xc4, 0xba, 0x3c, 0x21, 0x35, 0xe0, 0x7e, 0x05, 0x0f, 0xae, 0x95, 0x8b, 0xb6, 0x9d,
	0xb7, 0xb7, 0x55, 0x80, 0xfb, 0xa7, 0x05, 0xa3, 0x52, 0x9d, 0x13, 0x98, 0x98, 0xcc, 0x7e, 0xa0,
	0xf1, 0x2c, 0xb8, 0x4d, 0x88, 0x26, 0xf7, 0x52, 0xf0, 0xa4, 0x9c, 0x66, 0xb2, 0x69, 0xf6, 0x4d,
	0xc6, 0x66, 0xa0, 0xcb, 0x25, 0x9d, 0x65, 0xc5, 0x75, 0x33, 0xed, 0xa0, 0xab, 0x38, 0xed, 0xbe,
	0xe0, 0x51, 0x6e, 0x66, 0x56, 0xdb, 0xcd, 0xa2, 0x7c, 0xdd, 0x96, 0x46, 0x51, 0xfe, 0xb1, 0x78,
	0xa3, 0x1b, 0xc5, 0x1b, 0xb7, 0xc5, 0xfb, 0xdb, 0x82, 0xd9, 0x2b, 0x54, 0xdf, 0x89, 0x85, 0xc0,
	0x50, 0x61, 0xa5, 0x8a, 0xcc, 0x78, 0x2a, 0xb1, 0x29, 0x8b, 0xdf, 0x96, 0xc5, 0x67, 0x2e, 0xdc,
	0x7a, 0x13, 0x4a, 0x75, 0xb6, 0x51, 0xf1, 0x21, 0x56, 0xb9, 0x29, 0xf8, 0x08, 0xa3, 0xb9, 0xf8,
	0x51, 0xa2, 0x58, 0xfb, 0xa6, 0x6e, 0xb3, 0xaa, 0xf0, 0xef, 0x4d, 0xe9, 0x66, 0x45, 0x5f, 0x24,
	0xeb, 0x6c, 0x8b, 0xa9, 0x2a, 0xcf, 0x6d, 0x05, 0xb0, 0x27, 0x70, 0x7b, 0xb1, 0x8b, 0x31, 0x55,
	0x3f, 0xa1, 0xa0, 0x24, 0x8c, 0x18, 0xc7, 0x20, 0x49, 0xf8, 0x2d, 0x8f, 0xd0, 0x68, 0xa1, 0x6d,
	0xc2, 0x16, 0x84, 0x15, 0x0a, 0x68, 0xdb, 0xfd, 0xdd, 0x82, 0xfb, 0xad, 0xba, 0x8b, 0x69, 0xf8,
	0x18, 0xa0, 0x88, 0xd8, 0x68, 0x71, 0x03, 0x69, 0x24, 0xdf, 0x7b, 0x7f, 0xf2, 0xfd, 0xff, 0x4c,
	0x7e, 0x70, 0x53, 0xf2, 0xc3, 0x3a, 0x79, 0x1a, 0xdb, 0xf7, 0xf6, 0x47, 0xb6, 0xfb, 0x53, 0x01,
	0xee, 0x97, 0x30, 0xae, 0x98, 0x0c, 0xfa, 0x1b, 0x0a, 0x5b, 0x90, 0xb4, 0x4d, 0xb7, 0x1c, 0x0a,
	0xc1, 0x45, 0x79, 0xcb, 0xe9, 0x85, 0xfb, 0x1a, 0x18, 0xe5, 0xec, 0xc7, 0x72, 0xc3, 0x0f, 0x28,
	0xf2, 0xe2, 0xb6, 0xab, 0xfb, 0x68, 0x1d, 0xf5, 0xf1, 0x21, 0xd8, 0x8b, 0xf6, 0xd9, 0xac, 0x80,
	0xf9, 0x5f, 0x16, 0x0c, 0x57, 0x28, 0x12, 0x94, 0xec, 0x11, 0xd8, 0x3a, 0xd2, 0xcb, 0xfd, 0xe5,
	0x25, 0x1b, 0x7a, 0xda, 0x9e, 0x99, 0xff, 0x53, 0xeb, 0x73, 0x8b, 0x4d, 0xa1, 0xbf, 0xdc, 0xbc,
	0xe3, 0xe4, 0xa3, 0x1b, 0x65, 0x66, 0xfe, 0xd9, 0xd7, 0x70, 0xfb, 0xa8, 0x78, 0xf6, 0xc0, 0xbb,
	0xae, 0x69, 0xb3, 0xa9, 0x77, 0xbd, 0x46, 0x8f, 0xe1, 0xd6, 0x9b, 0x58, 0xaa, 0xea, 0xb9, 0x2a,
	0xe3, 0xdb, 0x5e, 0x05, 0x7d, 0x52, 0x50, 0xaa, 0x97, 0x0f, 0xbc, 0xea, 0x84, 0xcc, 0x6c, 0xaf,
	0x82, 0x5d, 0x80, 0x57, 0x58, 0x06, 0x3a, 0x22, 0x55, 0xaf, 0xde, 0xc5, 0x50, 0x3f, 0xd7, 0x5f,
	0xfc, 0x13, 0x00, 0x00, 0xff, 0xff, 0x12, 0x4f, 0x68, 0xde, 0xc3, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HermesClient is the client API for Hermes service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HermesClient interface {
	EventBuff(ctx context.Context, opts ...grpc.CallOption) (Hermes_EventBuffClient, error)
	Echo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	CreateSession(ctx context.Context, in *CreateSessionRequest, opts ...grpc.CallOption) (*CreateSessionResponse, error)
	ListChannels(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Channels, error)
	ListMessages(ctx context.Context, in *ChannelID, opts ...grpc.CallOption) (*Messages, error)
	GetChannel(ctx context.Context, in *ChannelID, opts ...grpc.CallOption) (*Channel, error)
}

type hermesClient struct {
	cc *grpc.ClientConn
}

func NewHermesClient(cc *grpc.ClientConn) HermesClient {
	return &hermesClient{cc}
}

func (c *hermesClient) EventBuff(ctx context.Context, opts ...grpc.CallOption) (Hermes_EventBuffClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Hermes_serviceDesc.Streams[0], "/Hermes/EventBuff", opts...)
	if err != nil {
		return nil, err
	}
	x := &hermesEventBuffClient{stream}
	return x, nil
}

type Hermes_EventBuffClient interface {
	Send(*Event) error
	Recv() (*Event, error)
	grpc.ClientStream
}

type hermesEventBuffClient struct {
	grpc.ClientStream
}

func (x *hermesEventBuffClient) Send(m *Event) error {
	return x.ClientStream.SendMsg(m)
}

func (x *hermesEventBuffClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *hermesClient) Echo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Hermes/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hermesClient) CreateSession(ctx context.Context, in *CreateSessionRequest, opts ...grpc.CallOption) (*CreateSessionResponse, error) {
	out := new(CreateSessionResponse)
	err := c.cc.Invoke(ctx, "/Hermes/CreateSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hermesClient) ListChannels(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Channels, error) {
	out := new(Channels)
	err := c.cc.Invoke(ctx, "/Hermes/ListChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hermesClient) ListMessages(ctx context.Context, in *ChannelID, opts ...grpc.CallOption) (*Messages, error) {
	out := new(Messages)
	err := c.cc.Invoke(ctx, "/Hermes/ListMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hermesClient) GetChannel(ctx context.Context, in *ChannelID, opts ...grpc.CallOption) (*Channel, error) {
	out := new(Channel)
	err := c.cc.Invoke(ctx, "/Hermes/GetChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HermesServer is the server API for Hermes service.
type HermesServer interface {
	EventBuff(Hermes_EventBuffServer) error
	Echo(context.Context, *Empty) (*Empty, error)
	CreateSession(context.Context, *CreateSessionRequest) (*CreateSessionResponse, error)
	ListChannels(context.Context, *Empty) (*Channels, error)
	ListMessages(context.Context, *ChannelID) (*Messages, error)
	GetChannel(context.Context, *ChannelID) (*Channel, error)
}

// UnimplementedHermesServer can be embedded to have forward compatible implementations.
type UnimplementedHermesServer struct {
}

func (*UnimplementedHermesServer) EventBuff(srv Hermes_EventBuffServer) error {
	return status.Errorf(codes.Unimplemented, "method EventBuff not implemented")
}
func (*UnimplementedHermesServer) Echo(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Echo not implemented")
}
func (*UnimplementedHermesServer) CreateSession(ctx context.Context, req *CreateSessionRequest) (*CreateSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSession not implemented")
}
func (*UnimplementedHermesServer) ListChannels(ctx context.Context, req *Empty) (*Channels, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListChannels not implemented")
}
func (*UnimplementedHermesServer) ListMessages(ctx context.Context, req *ChannelID) (*Messages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMessages not implemented")
}
func (*UnimplementedHermesServer) GetChannel(ctx context.Context, req *ChannelID) (*Channel, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChannel not implemented")
}

func RegisterHermesServer(s *grpc.Server, srv HermesServer) {
	s.RegisterService(&_Hermes_serviceDesc, srv)
}

func _Hermes_EventBuff_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(HermesServer).EventBuff(&hermesEventBuffServer{stream})
}

type Hermes_EventBuffServer interface {
	Send(*Event) error
	Recv() (*Event, error)
	grpc.ServerStream
}

type hermesEventBuffServer struct {
	grpc.ServerStream
}

func (x *hermesEventBuffServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

func (x *hermesEventBuffServer) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Hermes_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HermesServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Hermes/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HermesServer).Echo(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hermes_CreateSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HermesServer).CreateSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Hermes/CreateSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HermesServer).CreateSession(ctx, req.(*CreateSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hermes_ListChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HermesServer).ListChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Hermes/ListChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HermesServer).ListChannels(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hermes_ListMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HermesServer).ListMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Hermes/ListMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HermesServer).ListMessages(ctx, req.(*ChannelID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hermes_GetChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChannelID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HermesServer).GetChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Hermes/GetChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HermesServer).GetChannel(ctx, req.(*ChannelID))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hermes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Hermes",
	HandlerType: (*HermesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _Hermes_Echo_Handler,
		},
		{
			MethodName: "CreateSession",
			Handler:    _Hermes_CreateSession_Handler,
		},
		{
			MethodName: "ListChannels",
			Handler:    _Hermes_ListChannels_Handler,
		},
		{
			MethodName: "ListMessages",
			Handler:    _Hermes_ListMessages_Handler,
		},
		{
			MethodName: "GetChannel",
			Handler:    _Hermes_GetChannel_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EventBuff",
			Handler:       _Hermes_EventBuff_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pkg/api/api.proto",
}
