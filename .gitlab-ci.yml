variables:
    SERVICE_UNIQUE_NAME: 'hermes'
    SERVICE_NAME: '$SERVICE_UNIQUE_NAME'
stages:
    - build
    - deploy

development:
    stage: build
    script:
        - export GO111MODULE=on
        - go build -o hermes
    only:
        - develop
    environment: development

rc:
    stage: deploy
    variables:
      BRANCH_NAME: 'rc'
      NAMESPACE: 'rc'
    script:
        - docker build --build-arg PROJECT=$(basename $PWD) --target=app . -t registry.kube.ps/cloud/$SERVICE_NAME:$CI_PIPELINE_ID
        - docker tag registry.kube.ps/cloud/$SERVICE_NAME:$CI_PIPELINE_ID registry.kube.ps/cloud/$SERVICE_NAME:$CI_BUILD_REF_NAME
        - docker push registry.kube.ps/cloud/$SERVICE_NAME:$CI_PIPELINE_ID
        - docker push registry.kube.ps/cloud/$SERVICE_NAME:$CI_BUILD_REF_NAME
        - kubectl set image deployment/$SERVICE_UNIQUE_NAME-$NAMESPACE $SERVICE_UNIQUE_NAME=registry.kube.ps/cloud/$SERVICE_NAME:$CI_PIPELINE_ID -n $NAMESPACE
    only:
        - rc
    environment: rc

production:
    stage: deploy
    variables:
      BRANCH_NAME: 'master'
      NAMESPACE: 'pro'
    script:
        - docker build --build-arg PROJECT=$(basename $PWD) --target=app . -t registry.kube.ps/cloud/$SERVICE_NAME:$CI_PIPELINE_ID
        - docker tag registry.kube.ps/cloud/$SERVICE_NAME:$CI_PIPELINE_ID registry.kube.ps/cloud/$SERVICE_NAME:$CI_BUILD_REF_NAME
        - docker push registry.kube.ps/cloud/$SERVICE_NAME:$CI_PIPELINE_ID
        - docker push registry.kube.ps/cloud/$SERVICE_NAME:$CI_BUILD_REF_NAME
        - kubectl set image deployment/$SERVICE_UNIQUE_NAME-$NAMESPACE $SERVICE_UNIQUE_NAME=registry.kube.ps/cloud/$SERVICE_NAME:$CI_PIPELINE_ID -n $NAMESPACE
    only:
        - master
    when: manual
    environment: production
